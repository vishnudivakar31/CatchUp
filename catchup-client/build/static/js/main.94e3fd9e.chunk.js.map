{"version":3,"sources":["../node_modules/peerjs/dist sync","sound/ringtone_minimal.wav","container/Home.js","components/VideoChat.js","container/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Home","props","peer","uuid","myConnection","remoteConnection","setRemoteConnection","setMyConnection","callButtonTapped","bind","showCallingModal","showCallRejectedAlert","showConnectingModal","acceptCall","state","calling","calling_from","call_rejected","connecting","callerID","ringtone","Audio","Ringtone","loop","this","on","console","log","remoteConn","data","message_type","setState","userID","_","prevState","play","send","pause","remove","setTargetUUID","setCalledByMe","history","push","friendsUUID","value","length","conn","connect","Modal","open","disableBackdropClick","className","style","display","justifyContent","marginTop","Button","color","onClick","variant","marginLeft","Alert","severity","onClose","TextField","placeholder","inputRef","el","fullWidth","startIcon","Component","withRouter","VideoChat","targetUUID","myVideoRef","React","createRef","remoteVideoRef","callFriend","receiveCall","handleDisconnection","showDisconnectMessage","stopUserMedia","endCall","callDisconnected","onended","myCallObj","close","receiveCallObj","srcObject","ref","stream","getTracks","forEach","track","stop","calledByMe","navigator","mediaDevices","getUserMedia","video","audio","then","call","remoteStream","catch","err","answer","fontSize","whiteSpace","autoPlay","muted","Chat","flex","height","App","nanoid","replace","Peer","undefined","status","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94e3fd9e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;","export default __webpack_public_path__ + \"static/media/ringtone_minimal.abc760ad.wav\";","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport CallIcon from '@material-ui/icons/Call'\nimport Modal from '@material-ui/core/Modal'\nimport Ringtone from '../sound/ringtone_minimal.wav'\nimport Alert from '@material-ui/lab/Alert'\nimport { withRouter } from 'react-router-dom'\n\nimport \"./Home.css\"\n\nclass Home extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.peer = this.props.peer\n        this.uuid = this.props.uuid\n        this.myConnection = this.props.myConnection\n        this.remoteConnection = this.props.remoteConnection\n        this.setRemoteConnection = this.props.setRemoteConnection\n        this.setMyConnection = this.props.setMyConnection\n        this.callButtonTapped = this.callButtonTapped.bind(this)\n        this.showCallingModal = this.showCallingModal.bind(this)\n        this.showCallRejectedAlert = this.showCallRejectedAlert.bind(this)\n        this.showConnectingModal = this.showConnectingModal.bind(this)\n        this.acceptCall = this.acceptCall.bind(this)\n        this.state = {\n            calling: false,\n            calling_from: '',\n            call_rejected: false,\n            connecting: false,\n            callerID: ''\n        }\n        this.ringtone = new Audio(Ringtone)\n        this.ringtone.loop = true\n    }\n\n    componentDidMount() {\n        this.peer.on('open', id => {\n            console.log('myID', id)\n        })\n        this.peer.on('error', e => console.log(e))\n        this.peer.on('connection', remoteConn => {\n            remoteConn.on('open', () => {\n                this.props.setRemoteConnection(remoteConn)\n                remoteConn.on('data', data => {\n                    if (data.message_type && data.message_type === 'calling') {\n                        this.setState({\n                            calling: true,\n                            calling_from: `${data.userID} is calling you.`,\n                            callerID: `${data.userID}`\n                        })\n                    }\n                })\n            })\n        })\n    }\n\n    componentDidUpdate(_, prevState) {\n        if (this.state.calling !== prevState.calling) {\n            if (!this.state.calling) {\n                if(this.props.remoteConnection) {\n                    this.props.remoteConnection.send({\n                        message_type: 'call-declined'\n                    })\n                }\n                this.ringtone.pause()\n            } else {\n                this.ringtone.play()\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.ringtone.remove()\n    }\n\n    acceptCall() {\n        this.props.setTargetUUID(this.state.callerID)\n        this.props.setCalledByMe(false)\n        if (this.props.remoteConnection) {\n            this.props.remoteConnection.send({\n                message_type: 'call-accepted'\n            })\n            this.props.history.push('/chat')\n            this.ringtone.pause()\n        }\n    }\n\n    callButtonTapped() {\n        if (this.friendsUUID && this.friendsUUID.value.length > 0) {\n            let uuid = this.friendsUUID.value\n            let conn = this.peer.connect(uuid)\n            this.props.setCalledByMe(true)\n            conn.on('open', () => {\n                this.setMyConnection(conn)\n                this.props.setTargetUUID(uuid)\n                conn.send({\n                    message_type: 'calling',\n                    userID: this.uuid\n                })\n                conn.on('data', data => {\n                    if (data.message_type && data.message_type === 'call-declined') {\n                        this.setState({\n                            call_rejected: true,\n                            connecting: false\n                        })\n                    } else if (data.message_type && data.message_type === 'call-accepted') {\n                        this.props.history.push('/chat')\n                    }\n                })\n                this.setState({ connecting: true })\n            })\n            conn.on('error', e => {\n                console.log(e)\n            })\n        }\n    }\n\n    showCallingModal() {\n        return (\n            <Modal\n                open={this.state.calling}\n                disableBackdropClick={false}\n            >\n                <div className='calling_card'>\n                    <p>{this.state.calling_from}</p>\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '10%' }}>\n                        <Button\n                            color='secondary'\n                            onClick={() => this.setState({\n                                calling: false,\n                                calling_from: ''\n                            })}\n                        >\n                            Reject\n                        </Button>\n                        <Button\n                            color='primary'\n                            variant='contained'\n                            style={{ marginLeft: '2%' }}\n                            onClick={this.acceptCall}\n                        >\n                            Accept\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        )\n    }\n\n    showCallRejectedAlert() {\n        return (\n            <div style={{ display: this.state.call_rejected ? 'block' : 'none' }} className='alert-dialog'>\n                <Alert\n                    severity='warning'\n                    onClose={() => this.setState({ call_rejected: false })}\n                >\n                    Call rejected. User is busy. Try again later.\n                </Alert>\n            </div>\n        )\n    }\n\n    showConnectingModal() {\n        return (\n            <div style={{ display: this.state.connecting ? 'block' : 'none' }} className='alert-dialog'>\n                <Alert\n                    severity='info'\n                >\n                    Trying to connect with user. Please be patient.\n                </Alert>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                <div className=\"left-pane\">\n                    <div className=\"brand\">CatchUp</div>\n                    <div className=\"subtitle\">\n                        CatchUp is an anonymous video chat solution for you to communicate with each other without worrying about companies collecting your data and spying on you.\n                    </div>\n                </div>\n                <div className=\"right-pane\">\n                    <div className=\"id-title\">Your ID:</div>\n                    <div className=\"your-id\">{this.uuid}</div>\n                    <div className=\"input\">\n                        <TextField \n                            id=\"standard-basic\"\n                            placeholder=\"enter your friend's ID to connect\"\n                            inputRef={el => this.friendsUUID = el}\n                            fullWidth\n                        />\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            className='connect-button'\n                            startIcon={<CallIcon />}\n                            onClick={this.callButtonTapped}\n                        >\n                            Call\n                        </Button>\n                    </div>\n                </div>\n                {this.showCallingModal()}\n                {this.showCallRejectedAlert()}\n                {this.showConnectingModal()}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Home)\n","import React, { Component } from 'react'\nimport CallIcon from '@material-ui/icons/Call'\nimport Modal from '@material-ui/core/Modal'\nimport Button from '@material-ui/core/Button'\nimport './videochat.css'\n\nclass VideoChat extends Component {\n    constructor(props) {\n        super(props)\n        this.peer=this.props.peer\n        this.uuid=this.props.uuid\n        this.targetUUID=this.props.targetUUID\n        this.myVideoRef = React.createRef()\n        this.remoteVideoRef = React.createRef()\n        this.callFriend = this.callFriend.bind(this)\n        this.receiveCall = this.receiveCall.bind(this)\n        this.handleDisconnection = this.handleDisconnection.bind(this)\n        this.showDisconnectMessage = this.showDisconnectMessage.bind(this)\n        this.stopUserMedia = this.stopUserMedia.bind(this)\n        this.endCall = this.endCall.bind(this)\n        this.state = {\n            callDisconnected: false\n        }\n    }\n\n    componentDidMount() {\n        this.callFriend()\n        this.receiveCall()\n        this.remoteVideoRef.onended = e => this.handleDisconnection()\n        this.peer.on('connection', conn => {\n            conn.on('data', data => {\n                if(data.message_type && data.message_type === 'call-disconnected') {\n                    if(this.myCallObj) {\n                        this.myCallObj.close()\n                    }\n                    if(this.receiveCallObj) {\n                        this.receiveCallObj.close()\n                    }\n                    this.props.history.push(\"/\")\n                }\n            })\n        })\n    }\n    \n    componentWillUnmount() {\n        if (this.props.remoteConnection) {\n            this.props.remoteConnection.send({\n                message_type: 'call-disconnected'\n            })\n        }\n        if(this.props.myConnection) {\n            this.props.myConnection.send({\n                message_type: 'call-disconnected'\n            })\n        }\n        this.handleDisconnection()\n    }\n\n    endCall() {\n        let conn = this.peer.connect(this.props.targetUUID)\n        conn.on('open', () => {\n            conn.send({\n                message_type: 'call-disconnected'\n            })\n        })\n        if(this.myCallObj) {\n            this.myCallObj.close()\n        }\n        if(this.receiveCallObj) {\n            this.receiveCallObj.close()\n        }\n        this.props.history.push(\"/\")\n    }\n\n    showDisconnectMessage() {\n        return (\n            <Modal\n                open={this.state.callDisconnected}\n                disableBackdropClick={false}\n            >\n                <div className='calling_card'>\n                    <p>Call disconnected.</p>\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '10%' }}>\n                        <Button\n                            color='primary'\n                            style={{ marginLeft: '2%' }}\n                            onClick={() => this.props.history.push(\"/\")}\n                        >\n                            Ok\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        )\n    }\n\n    handleDisconnection() {\n        this.setState({\n            callDisconnected: true\n        })\n        this.stopUserMedia(this.myVideoRef)\n        if(this.myVideoRef !== null) {\n            this.myVideoRef.srcObject = null\n        }\n    \n        this.stopUserMedia(this.remoteVideoRef)\n        if(this.remoteVideoRef !== null) {\n            this.remoteVideoRef.srcObject = null\n        }\n    }\n\n    stopUserMedia(ref) {\n        if(ref !== null) {\n            let stream = ref.srcObject\n            if(stream) {\n                let tracks = stream.getTracks()\n                tracks.forEach(track => track.stop())\n            }\n        }\n    }\n\n    callFriend() {\n        if (this.props.calledByMe) {\n            navigator.mediaDevices.getUserMedia({video: true, audio: true})\n            .then(stream => {\n                let call = this.peer.call(this.targetUUID, stream)\n                this.myCallObj = call\n                call.on('stream', remoteStream => {\n                    this.remoteVideoRef.srcObject = remoteStream\n                })\n                call.on('close', e => this.endCall())\n                this.myVideoRef.srcObject = stream\n            })\n            .catch(err => console.log(err))  \n        }\n    }\n\n    receiveCall() {\n        this.peer.on('call', call => {\n            navigator.mediaDevices.getUserMedia({video: true, audio: true})\n            .then(stream => {\n                this.receiveCallObj = call\n                call.answer(stream)\n                call.on('stream', remoteStream => {\n                    if(this.remoteVideoRef !== null) {\n                        this.remoteVideoRef.srcObject = remoteStream\n                    }\n                })\n                call.on('close', e => this.endCall())\n                this.myVideoRef.srcObject = stream\n            })\n            .catch(err => console.log(err))\n        })\n    }\n\n    render() {\n        return (\n            <div className='video-chat'>\n                <div className='header'>\n                    <div className=\"brand\">CatchUp</div>\n                    <div className='connection-notification'>\n                        <CallIcon \n                            fontSize='small'\n                        />\n                        <div style={{ marginLeft: '2%', whiteSpace: 'nowrap' }}>{this.targetUUID} connected.</div>\n                    </div>\n                </div>\n                <div className='video-container'>\n                    <div className='remote-video-container'>\n                        <video className='remote-video' ref={video => this.remoteVideoRef = video} autoPlay />\n                    </div>\n                    <div className='my-video-container'>\n                        <video className='my-video' ref={video => this.myVideoRef = video} autoPlay muted />\n                        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                            <Button\n                                color='secondary'\n                                variant='contained'\n                                onClick={this.endCall}\n                            >\n                                End Call\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n                \n                {this.showDisconnectMessage()}\n            </div>\n        )\n    }\n}\n\nexport default VideoChat\n","import React, { Component } from 'react'\nimport VideoChat from '../components/VideoChat'\nimport { withRouter } from 'react-router-dom'\n\nclass Chat extends Component {\n    render() {\n        return (\n            <div style={{ display: 'flex', flex: 1, height: '100%' }}>\n                <VideoChat \n                        calledByMe={this.props.calledByMe}\n                        peer={this.props.peer}\n                        uuid={this.props.uuid}\n                        myConnection={this.props.myConnection} \n                        remoteConnection={this.props.remoteConnection}\n                        targetUUID={this.props.targetUUID}\n                        history={this.props.history}\n                />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Chat)\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport React, { Component } from 'react' \nimport Peer from 'peerjs'\nimport Home from './container/Home'\nimport Chat from './container/Chat'\nimport { nanoid } from 'nanoid'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.uuid = nanoid(9).replace(/[-_]/g, 'A')\n    this.peer = new Peer(this.uuid)\n    this.state = {\n      myConnection: undefined,\n      remoteConnection: undefined,\n      targetUUID: '',\n      calledByMe: false\n    }\n    this.setMyConnection = this.setMyConnection.bind(this)\n    this.setRemoteConnection = this.setRemoteConnection.bind(this)\n    this.setTargetUUID = this.setTargetUUID.bind(this)\n    this.setCalledByMe = this.setCalledByMe.bind(this)\n  }\n\n  setMyConnection(conn) {\n    this.setState({\n      myConnection: conn\n    })\n  }\n  \n  setRemoteConnection(conn) {\n    this.setState({\n      remoteConnection: conn\n    })\n  }\n\n  setTargetUUID(uuid) {\n    this.setState({\n      targetUUID: uuid\n    })\n  }\n\n  setCalledByMe(status) {\n    this.setState({\n      calledByMe: status\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path='/chat'>\n            <Chat \n              peer={this.peer} \n              uuid={this.uuid} \n              myConnection={this.state.myConnection} \n              remoteConnection={this.state.remoteConnection}\n              targetUUID={this.state.targetUUID}\n              calledByMe={this.state.calledByMe}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Home \n              peer={this.peer} \n              uuid={this.uuid} \n              myConnection={this.state.myConnection} \n              remoteConnection={this.state.remoteConnection}\n              setMyConnection={this.setMyConnection}\n              setRemoteConnection={this.setRemoteConnection}\n              setTargetUUID={this.setTargetUUID}\n              setCalledByMe={this.setCalledByMe}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}